{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/cockpit/cockpit.component.ts","./src/app/cockpit/cockpit.component.html","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/recipes/recipe-detail/recipe-detail.component.ts","./src/app/recipes/recipe-detail/recipe-detail.component.html","./src/app/recipes/recipe-list/recipe-item/recipe-item.component.ts","./src/app/recipes/recipe-list/recipe-item/recipe-item.component.html","./src/app/recipes/recipe-list/recipe-list.component.ts","./src/app/recipes/recipe-list/recipe-list.component.html","./src/app/recipes/recipe-list/recipe.model.ts","./src/app/recipes/recipes.component.ts","./src/app/recipes/recipes.component.html","./src/app/server-element/server-element.component.ts","./src/app/server-element/server-element.component.html","./src/app/shared/ingredient.model.ts","./src/app/shopping-list/shopping-edit/shopping-edit.component.ts","./src/app/shopping-list/shopping-edit/shopping-edit.component.html","./src/app/shopping-list/shopping-list.component.ts","./src/app/shopping-list/shopping-list.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n \n  serverElements  =[{type:'server',name:'Testserver',content:'just a test!'}];\n  \n  \n  title = 'udemydemo';\nonServerAdded(serverData:{serverName:string,serverContent:string}){\n    this.serverElements.push( {\n      type:'server',\n      name:serverData.serverName,\n      content:serverData.serverContent \n    })\n  }\n  onBlueprintAdded(blueprintData:{serverName:string,serverContent:string}){\n    this.serverElements.push( {\n      type:'blueprint',\n      name:blueprintData.serverName,\n      content:blueprintData.serverContent \n    })\n  }}  \n","<app-header></app-header>\n <div class=\"container\">\n   <div class=\"row\">\n    <div class=\"col-md-12\">\n      <app-recipes></app-recipes>\n      <app-shopping-list></app-shopping-list>\n    </div>\n   </div>\n </div>\n <hr>\n <div class=\"container\">\n   <app-cockpit  (serverCreated)=\"onServerAdded($event)\"\n   (bpCreated)=\"onBlueprintAdded($event)\"></app-cockpit>\n  <hr>\n  <div class=\"row\">\n    <div class=\"col-xs-12\">\n      <app-server-element *ngFor=\"let serverElement of serverElements\"\n      [srvElement]=\"serverElement\"></app-server-element>\n    </div>\n  </div>\n </div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { RecipesComponent } from './recipes/recipes.component';\nimport { RecipeListComponent } from './recipes/recipe-list/recipe-list.component';\nimport { RecipeDetailComponent } from './recipes/recipe-detail/recipe-detail.component';\nimport { RecipeItemComponent } from './recipes/recipe-list/recipe-item/recipe-item.component';\nimport { ShoppingListComponent } from './shopping-list/shopping-list.component';\nimport { ShoppingEditComponent } from './shopping-list/shopping-edit/shopping-edit.component';\nimport { CockpitComponent } from './cockpit/cockpit.component';\nimport { ServerElementComponent } from './server-element/server-element.component';\nimport { FormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    RecipesComponent,\n    RecipeListComponent,\n    RecipeDetailComponent,\n    RecipeItemComponent,\n    ShoppingListComponent,\n    ShoppingEditComponent,\n    CockpitComponent,\n    ServerElementComponent,\n    \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-cockpit',\n  templateUrl: './cockpit.component.html',\n  styleUrls: ['./cockpit.component.css']\n})\nexport class CockpitComponent implements OnInit {\n  @Output()serverCreated=new EventEmitter<{serverName:string,serverContent:string}>();\n  @Output('bpCreated')blueprintCreated=new EventEmitter<{serverName:string,serverContent:string}>();\n  \n  newServerName='';\n  newServerContent='';\n  serverElement=[];\n\n\n  constructor() { }\n\n\n  ngOnInit(): void {\n  }\n  onAddServer(){\n   this.serverCreated.emit\n   ({\n    serverName: this.newServerName,\n    serverContent:this.newServerContent\n  });\n  }\n  onAddBlueprint(){\n    this.blueprintCreated.emit\n   ({\n    serverName: this.newServerName,\n    serverContent:this.newServerContent\n  });\n  }\n}","<div class=\"row\">\n    <div class=\"col-xs-12\">\n      <p>add server or blueprint</p>\n      <label>Server Name</label>\n      <input type=\"text\" class=\"form-control\"[(ngModel)]=\"newServerName\">\n      <label>Server Content</label>\n   \n  <input type=\"text\" class=\"form-control\"[(ngModel)]=\"newServerContent\">\n      <br>\n      <button class=\"btn btn-primary\" (click)=\"onAddServer()\">Add Server</button>\n      <button class=\"btn btn-primary\" (click)=\"onAddBlueprint()\">Add Server Blueprint</button>\n    </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n"," <nav class=\"navbar navbar-default\">\n    <div class=\"container-fluid\">\n        <div class=\"navbar-header\">\n            <a href=\"#\" class=\"navbar-brand\">Recipe Book</a>\n        </div>\n        <div class=\"collapse navbar-collapse\">\n            <ul class=\"nav navbar-nav\">\n                <li><a href=\"#\">Recipes</a></li>\n                <li><a href=\"#\">Shopping List</a></li>\n            </ul>\n            <ul class=\"nav navbar-nav navbar-right\">\n                <li class =\"dropdown\">\n                     \n                      <a href=\"#\" class=\"dropdown-toggle\" role=\"button\">Manage<span class=\"caret\"></span></a>\n                      <ul class =\"dropdown-menu\">\n                       <li><a href=\"#\">Save data</a></li>\n                       <li><a href=\"#\">Fetch data</a></li>\n                    </ul>\n                </li>\n            </ul>\n        </div>\n    </div>\n </nav>\n  \n  \n      ","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-recipe-detail',\n  templateUrl: './recipe-detail.component.html',\n  styleUrls: ['./recipe-detail.component.css']\n})\nexport class RecipeDetailComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n"," <div class=\"row\">\n    <div class=\"col-xs-12\">\n        <img src =\"\" alt=\"\" class=\"img-responsive\">    \n    </div>\n </div>\n <div class=\"row\">\n    <div class=\"col-xs-12\">\n        <h1>Recipe Name</h1>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-xs-12\">\n        <div class=\"btn-group\">\n           <button type=\"button\" class=\"btn btn-primary dropdown-toggle\">Manage Recipe<span\n             class=\"caret\"></span></button>\n             <ul class=\"dropdown-menu\">\n                <li><a href=\"#\">To shopping list</a></li>\n                <li><a href=\"#\">Edit Recipe</a></li>\n                <li><a href=\"#\">Delete Recipe</a></li>\n             </ul>\n        </div>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-xs-12\">\n        Description\n    </div>\n</div>\n<div class=\"row\">\n   <div class=\"col-xs-12\">\n    Ingredients \n   </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-recipe-item',\n  templateUrl: './recipe-item.component.html',\n  styleUrls: ['./recipe-item.component.css']\n})\nexport class RecipeItemComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>recipe-item works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { Recipe } from './recipe.model';\n\n@Component({\n  selector: 'app-recipe-list',\n  templateUrl: './recipe-list.component.html',\n  styleUrls: ['./recipe-list.component.css']\n})\nexport class RecipeListComponent implements OnInit {\n  recipes:Recipe[]=[\n    new Recipe('A test recipe','this is simply a test','https://media.istockphoto.com/photos/brazilian-fish-stew-moqueca-picture-id1320857678?b=1&k=20&m=1320857678&s=170667a&w=0&h=vCOmZnpA2SVhaypcER4WrhfLna_JpmhL0ldC_OTHd58='),\n    new Recipe('A test recipe','this is simply a test','https://media.istockphoto.com/photos/brazilian-fish-stew-moqueca-picture-id1320857678?b=1&k=20&m=1320857678&s=170667a&w=0&h=vCOmZnpA2SVhaypcER4WrhfLna_JpmhL0ldC_OTHd58=')\n  ];\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-xs-12\">\n        <button class=\"btn btn-success\">New Recipe</button> \n        <hr>\n    </div>\n</div>\n<div class=\"row\">\n    <div class =\"col-xs-12\">\n        <a href=\"#\" class=\"list-group-item clearfix\"\n        *ngFor =\"let recipe of recipes\">\n            <div class=\"pull-left\">\n                <h3 class=\"list-group-item-heading\">{{recipe.name}}</h3>\n                <p class=\"list-group-item-text\">{{recipe.description}}</p>\n            </div>\n            <span class=\"pull-right\">\n                <img \n                [src]=\"recipe.imagePath\" \n                alt=\"{{recipe.name}}\" \n                class=\"img-responsive\" \n                style=\"max-height:50px;\">\n            </span>\n        </a>\n        <app-recipe-item></app-recipe-item>\n    </div>\n</div>\n ","\nexport class Recipe {\n    public name: string;\n    public description: string;\n    public imagePath: string;\n\nconstructor(name: string, desc: string, imagePath: string){\n    this.name=name;\n    this.description=desc;\n    this.imagePath=imagePath;\n}\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-recipes',\n  templateUrl: './recipes.component.html',\n  styleUrls: ['./recipes.component.css']\n})\nexport class RecipesComponent implements OnInit {\n  \n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-5\">\n        <app-recipe-list></app-recipe-list>\n    </div>\n    <div class=\"col-md-7\">\n        <app-recipe-detail></app-recipe-detail>\n    </div>\n</div>\n","import { Component, OnInit,Input } from '@angular/core';\n\n@Component({\n  selector: 'app-server-element',\n  templateUrl: './server-element.component.html',\n  styleUrls: ['./server-element.component.css']\n})\nexport class ServerElementComponent implements OnInit {\n \n  @Input('srvElement')\n  element!: { type: string,name: string,content: string};\n\n  constructor() { }\n  \n  ngOnInit() {\n  }\n\n}\n","<div class=\"panel panel-default\">\n      <div class=\"panel-heading\">{{element.name}}</div>\n      <div class=\"panel-body\">\n        <p>\n          <strong *ngIf=\"element.type==='server'\" style=\"color:red\">{{ element.content}}</strong>\n          <em *ngIf=\"element.type==='blueprint'\">{{element.content}}</em>\n        </p>\n      </div>\n    </div>\n","export class Ingredient{\nconstructor( public name:string,public amount:number){}\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-shopping-edit',\n  templateUrl: './shopping-edit.component.html',\n  styleUrls: ['./shopping-edit.component.css']\n})\nexport class ShoppingEditComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-xs-12\">\n        <form>\n            <div class=\"row>\">\n                <div class=\"col-sm-5 form-group\">\n                    <label for=\"name\">Name</label>\n                    <input type=\"text\" id=\"name\" class=\"form-control\"> \n                </div>\n                <div class=\"col-sm-2 form-group\">\n                    <label for=\"amount\">Amount</label>\n                    <input type=\"number\" id=\"amount\" class=\"form-control\"> \n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-xs-12\">\n                 <button class=\"btn btn-success\" type=\"submit\">Add</button>\n                 <button class=\"btn btn-danger\" type=\"button\">Delete</button>\n                 <button class=\"btn btn-primary\" type=\"button\">Add</button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { Ingredient } from '../shared/ingredient.model';\n\n@Component({\n  selector: 'app-shopping-list',\n  templateUrl: './shopping-list.component.html',\n  styleUrls: ['./shopping-list.component.css']\n})\nexport class ShoppingListComponent implements OnInit {\n  ingredients: Ingredient[]=[\n    new Ingredient('Apple',5),\n    new Ingredient('Orange',7)\n  ];\n    \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n"," <div class=\"row\">\n    <div class=\"col-xs-10\">\n        <app-shopping-edit></app-shopping-edit>\n        <hr>\n        <ul class=\"list-group\">\n            <a  class=\"list-group-item\" \n            style=\"cursor:pointer\"\n            *ngFor=\"let ingredient of ingredients\" >\n             {{ingredient.name}}({{ingredient.amount}})\n        </a>\n        </ul>\n    </div>\n </div>\n ","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}